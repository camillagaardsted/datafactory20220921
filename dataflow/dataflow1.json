{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "positiveovertidcsvfil",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Synapsecovid19tabel",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Date as date 'yyyy-MM-dd',",
				"          NewPositive as string,",
				"          NotPrevPos as string,",
				"          PosPct as string,",
				"          PrevPos as string,",
				"          Tested as string,",
				"          Tested_kumulativ as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     dateFormats: ['yyyy-MM-dd'],",
				"     timestampFormats: ['yyyy-MM-dd\\'T\\'HH:mm:ss'],",
				"     preferredIntegralType: 'integer',",
				"     preferredFractionalType: 'double',",
				"     booleanFormat: ['1', '0']) ~> source1",
				"source1 select(mapColumn(",
				"          Date,",
				"          Nyepositive = NewPositive",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(Nyepositive = toInteger(trim(replace(Nyepositive,'.',''))),",
				"          testcolumnparse = toInteger('1.019','#.###','de'),",
				"          testcolumnparse2 = toInteger(trim(Nyepositive),'#.###','de'),",
				"          trimNyePositive = trim(Nyepositive)) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          Date,",
				"          AntalSmittede = testcolumnparse2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}